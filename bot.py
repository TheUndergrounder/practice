import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters.command import Command
from aiogram import F
from aiogram import html
from base import *
#from config_reader import config
from raspisanie import *
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7265948579:AAGRZ1rwfn19i9KUYzukR7U8M5WfEoXT1ko")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"),
            types.KeyboardButton(text="–ê—É–¥–∏—Ç–æ—Ä–∏–∏")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏"
    )
    await message.answer("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", reply_markup=keyboard)

mode="normal"
@dp.message(F.text.lower() == "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")
async def cmd_prep(message: types.Message):
    global mode
    mode="teacher"
    await message.reply("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")

@dp.message(F.text.lower() == "–∞—É–¥–∏—Ç–æ—Ä–∏–∏")
async def cmd_audit(message: types.Message):
    await message.reply("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–π")
    
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test1
@dp.message(Command("test1"))
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")

@dp.message(F.text)
async def read_message(message: types.Message):
    global mode
    if mode=="teacher":
        mode="normal"
        teacher=get_name(message.text)
        if teacher=="":
            await message.reply("–¢–∞–∫–æ–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            reply="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è " + teacher
            for string in get_rasp(teacher):
                string=string.replace("–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:", "<b>üìÜ")
                string = string.replace(", –ß—ë—Ç–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏: ", "</b>\n")
                string = string.replace(", –ù–æ–º–µ—Ä –ø–∞—Ä—ã: ", "\n‚ñº")
                string = string.replace(": –¢–∏–ø –ø–∞—Ä—ã:", "\n")
                string = string.replace(", –ü—Ä–µ–¥–º–µ—Ç:", "")
                string = string.replace(", –ê—É–¥–∏—Ç–æ—Ä–∏—è: ‚Äì ", "\n")
                string = string.replace("[", "")
                string = string.replace("]", "")
                string = string.replace("\'", "")
                reply+="\n"+string
            await message.reply(reply,parse_mode=ParseMode.HTML)
    else:
        await message.reply("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())